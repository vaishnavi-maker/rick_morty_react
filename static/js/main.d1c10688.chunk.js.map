{"version":3,"sources":["component/search.js","component/card.js","component/pagination.js","component/filterBTN.js","component/category/gender.js","component/category/species.js","component/category/status.js","component/filter.js","component/navbar.js","component/category/inputlist.js","component/Location.js","component/Episodes.js","component/category/carddetail.js","App.js","reportWebVitals.js","index.js"],"names":["search","updateSearch","updatePageno","className","onChange","e","target","value","type","placeholder","autoComplete","onClick","preventDefault","card","display","results","page","map","x","id","image","name","status","location","to","style","textDecoration","color","textAlign","src","alt","pagination","info","pageno","nextLabel","previousLabel","nextClassName","previousClassName","pageClassName","pageLinkClassName","activeClassName","onPageChange","selected","forcePage","pageCount","pages","filterBTN","item","index","task","htmlFor","gender","updateGender","species","updateSpecies","updateStatus","filter","cursor","navbar","Episodelist","inputName","total","setID","width","Array","keys","Location","useState","fetchedData","updateFetchedData","dimension","locationno","updateLocation","updateResults","api","useEffect","a","fetch","then","res","json","data","console","log","Promise","all","residents","Episodes","air_date","episodeno","updateEpisode","characters","Carddetail","useParams","origin","HomePage","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1c10688.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function search({updateSearch , updatePageno}) {\r\n   \r\n   return (\r\n      <div>\r\n         <form className=\"formedit\" >\r\n            <input onChange={\r\n               (e)=>{\r\n                  //search from 1 page\r\n                  updatePageno(1)\r\n                  updateSearch(e.target.value)\r\n               }\r\n            } className=\"inputtext\" type=\"text\" placeholder=\"Enter Character name\" autoComplete=\"off\"/>\r\n            <input type=\"submit\" onClick={(e)=>{e.preventDefault()}}/>\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport \"./style.css\";\r\n\r\nexport default function card({results , page}) {\r\n\r\n   let display;     \r\n   if(results){\r\n      display = results.map((x) => {\r\n         let { id, image, name, status, location } = x;\r\n       \r\n           return (\r\n            <Link \r\n               to={`${page}${id}`} \r\n               key={id} \r\n               className=\"col-4 mb-4\" \r\n               style={{textDecoration:'none',color:'black',textAlign:\"left\"}}>\r\n               <div className=\"card\">\r\n                  <img className='img img-fluid' src={image} alt=\"\" />\r\n                  <div className='content'>\r\n                     <div className=\"fw-bold\">{name}</div>\r\n                     <div className=\"fs-6\">Last Location </div>\r\n                     <div className=\"fs-5\">{location.name}</div>\r\n                     {(()=>{\r\n                        if(status===\"Alive\"){\r\n                           return(\r\n                              <div className=\"badge bg-success\">\r\n                                 {status}\r\n                              </div>\r\n                           )\r\n                        }\r\n                        else if(status===\"Dead\"){\r\n                           return(\r\n                              <div className=\"badge bg-danger\">\r\n                                 {status}\r\n                              </div>\r\n                           )\r\n                        }\r\n                        else{\r\n                           return(\r\n                              <div className=\"badge bg-secondary\">\r\n                                 {status}\r\n                              </div>\r\n                           )\r\n                        }\r\n                     })()}\r\n                  </div>\r\n               </div>\r\n            </Link>\r\n         );\r\n       });\r\n   }\r\n   else{\r\n      display=\"no character found\";\r\n   }\r\n   \r\n   return (\r\n      <>\r\n         {display}\r\n      </>\r\n   )\r\n   \r\n}\r\n","import React from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nexport default function pagination({info,pageno,updatePageno}) {\r\n   \r\n   /*const nextPage=()=>{\r\n     // alert(\"next page\")\r\n      updatePageno(cur_page=>cur_page+1)\r\n   }\r\n\r\n   const prevPage=()=>{\r\n      //alert(\"prev page\")\r\n      if(pageno===1) return;\r\n      updatePageno(cur_page=>cur_page-1)\r\n   }*/\r\n   \r\n   return (\r\n      <>\r\n         {\r\n            /* <button className=\"btn btn-primary\" onClick={prevPage}>\r\n               Prev\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={nextPage}>\r\n               Next\r\n            </button>*/\r\n         } \r\n         <ReactPaginate \r\n            className=\"pagination justify-content-center gap-4 my-4\" \r\n            nextLabel=\"Next\"\r\n            previousLabel=\"Prev\"\r\n            nextClassName=\"btn btncolor \"\r\n            previousClassName=\"btn btncolor\"\r\n            pageClassName=\"page-item\"\r\n            pageLinkClassName=\"page-link\"\r\n            activeClassName=\"active\"\r\n            onPageChange={(page)=>{\r\n               updatePageno(page.selected+1)\r\n            }}\r\n            forcePage={pageno===1 ? 0 : pageno-1}\r\n            pageCount={info?.pages}\r\n         />\r\n      </>\r\n   )\r\n}\r\n","import React from 'react'\r\n\r\nfunction filterBTN({name,item,index,task,updatePageno}) {\r\n   return (\r\n      <div>\r\n         <div className=\"form-check\">\r\n            <input \r\n               className=\"form-check-input\" \r\n               onClick={()=>{\r\n                  updatePageno(1);\r\n                  task(item);\r\n               }}\r\n               type=\"radio\" \r\n               value=\"\" \r\n               name={name}\r\n               id={`${name}-${index}`}/>\r\n               <label className=\"form-check-label\" htmlFor={`${name}-${index}`}>\r\n                  {item}\r\n               </label>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default filterBTN\r\n","import React from 'react'\r\nimport FilterBTN from '../filterBTN'\r\n\r\nfunction gender({updateGender,updatePageno}) {\r\n   let gender1=[\"Female\",\"Male\",\"Genderless\",\"Unknown\"]\r\n   return (\r\n      <div className=\"accordion-item\">\r\n         <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n               Gender\r\n            </button>\r\n         </h2>\r\n         <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n               {\r\n                  gender1.map((item,index)=>\r\n                  (<FilterBTN task={updateGender} updatePageno={updatePageno} key={index} index={index} name=\"Gender\" item={item}/>))\r\n               }\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default gender\r\n","import React from 'react'\r\nimport FilterBTN from '../filterBTN'\r\n\r\nfunction species({updateSpecies,updatePageno}) {\r\n   let species1=[\"Human\",\"Alien\",\"Humanoid\",\"Poopybutthole\",\"Mythological\",\"Unknown\",\"Animal\",\"Disease\",\"Robot\",\"Cronenberg\",\"Planet\"]\r\n   return (\r\n      <div className=\"accordion-item\">\r\n         <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n               Species\r\n            </button>\r\n         </h2>\r\n         <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n               {\r\n                  species1.map((item,index)=>\r\n                  (<FilterBTN task={updateSpecies} updatePageno={updatePageno} key={index} index={index} name=\"Species\" item={item}/>))\r\n               }\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default species\r\n","import React from 'react'\r\nimport FilterBTN from '../filterBTN'\r\n\r\nfunction status({updateStatus,updatePageno}) {\r\n   let status1=[\"Alive\",\"Dead\",\"Unknown\"];\r\n   return (\r\n      <div className=\"accordion-item\">\r\n         <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n               Status\r\n            </button>\r\n         </h2>\r\n         <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n               {\r\n                  status1.map((item,index)=>\r\n                  (<FilterBTN task={updateStatus} updatePageno={updatePageno} key={index} index={index} name=\"Status\" item={item}/>))\r\n               }\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default status\r\n","import React from 'react'\r\nimport Gender from \"./category/gender\";\r\nimport Species from \"./category/species\";\r\nimport Status from \"./category/status\";\r\n\r\nexport default function filter({updateStatus,updateGender,updateSpecies,updatePageno}) {\r\n   return (\r\n      <div className=\"col-3\">\r\n         <div className=\"text-center fw-bold fs-4 mb-2\">\r\n            Filter\r\n         </div>\r\n         <div \r\n            style={\r\n               {cursor:\"pointer\"}\r\n            }\r\n            onClick={()=>{\r\n               updateStatus(\"\")\r\n               updateGender(\"\")\r\n               updateSpecies(\"\")\r\n               updatePageno(1)\r\n            }}\r\n            className=\"text-center text-primary text-decoration-underline\">\r\n            clear filter\r\n         </div>\r\n\r\n         <div className=\"accordion my-3\" id=\"accordionExample\">\r\n            <Status updateStatus={updateStatus} updatePageno={updatePageno}/>\r\n            <Species updateSpecies={updateSpecies} updatePageno={updatePageno}/>\r\n            <Gender updateGender={updateGender} updatePageno={updatePageno}/>\r\n         </div>\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nexport default function navbar() {\r\n   return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"fs-3 navbar-brand\">Rick and Morty Character Wiki</div>\r\n      <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n         <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n            <Link className=\"nav-link linki\" to=\"/\">Character</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <Link className=\"nav-link linki\" to=\"/Episodes\">Episode</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <Link className=\"nav-link linki\" to=\"/Location\">Location</Link>\r\n            </li>\r\n         </ul>\r\n      </div>\r\n      </nav>\r\n   )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Episodelist({inputName,total,setID}) {\r\n   //console.log([...Array(total).keys()])\r\n   return (\r\n      <div className=\"input-group mb-3\">\r\n         <select \r\n            style={{width:'80%'}}\r\n            className=\"custom-select justify-content-center\" \r\n            id=\"inputGroupSelect01\"\r\n            onChange={e=>{\r\n               setID(e.target.value)\r\n            }}>\r\n            <option selected>Choose ...</option>\r\n            {[...Array(total).keys()].map(x=>{\r\n               return <option value={x+1}>{inputName}-{x+1}</option>\r\n            })\r\n\r\n            }\r\n         </select>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Episodelist\r\n","import React from 'react'\r\nimport { useEffect , useState } from 'react';\r\nimport Card from \"./card\";\r\nimport Inputlist from './category/inputlist';\r\n\r\nfunction Location() {\r\n\r\n   let [fetchedData, updateFetchedData] = useState([]);\r\n   //destructure the content\r\n   let { name , dimension , type } = fetchedData;\r\n   let [locationno, updateLocation] = useState(1);\r\n   let [results, updateResults] = useState([]);\r\n\r\n   let api = `https://rickandmortyapi.com/api/location/${locationno}`;\r\n\r\n   useEffect(() => {\r\n      (async function () {\r\n        let data = await fetch(api).then((res) => res.json());\r\n        updateFetchedData(data);\r\n        console.log(data);\r\n        let a=await Promise.all(\r\n            //return characters information present in the selected Location\r\n            data.residents.map((x)=>{\r\n               return fetch(x).then((res)=>res.json());\r\n            })\r\n         )\r\n         updateResults(a);\r\n      })();\r\n    }, [api]);\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         <div className=\"row\">\r\n            <h1 className=\"text-center mt-3\">Location : \r\n               <span className=\"text-warning\">\r\n                  { name === \"\" ? \"unknown\" : name}\r\n               </span>\r\n            </h1>\r\n            <h5 className=\"text-center mt-2\">Dimension : {dimension === \"\" ? \"unknown\" : dimension}</h5>\r\n            <h5 className=\"text-center mt-2\">Type : {type === \"\" ? \"unknown\" : type}</h5>\r\n         </div>\r\n         <div className=\"row mt-3\">\r\n            <div className=\"col-3\">\r\n               <h4 className=\"text-center mb-4\">Pick Location</h4>\r\n               <Inputlist inputName=\"Location\" total={126} setID={updateLocation} />\r\n            </div>\r\n            <div className=\"col-8\">\r\n               <div className=\"row\">\r\n                  <Card page=\"/location/\" results={results}/>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Location\r\n","import React from 'react'\r\nimport { useEffect , useState } from 'react';\r\nimport Card from \"./card\";\r\nimport Inputlist from './category/inputlist';\r\n\r\nfunction Episodes() {\r\n\r\n   let [fetchedData, updateFetchedData] = useState([]);\r\n   //destructure the content\r\n   let { air_date , name } = fetchedData;\r\n   let [episodeno, updateEpisode] = useState(1);\r\n   let [results, updateResults] = useState([]);\r\n\r\n   let api = `https://rickandmortyapi.com/api/episode/${episodeno}`;\r\n\r\n   useEffect(() => {\r\n      (async function () {\r\n        let data = await fetch(api).then((res) => res.json());\r\n        updateFetchedData(data);\r\n        console.log(data);\r\n        let a=await Promise.all(\r\n           //return characters information present in the selected episode\r\n           data.characters.map((x)=>{\r\n              return fetch(x).then((res)=>res.json());\r\n           })\r\n        )\r\n        updateResults(a);\r\n      })();\r\n    }, [api]);\r\n\r\n\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         <div className=\"row\">\r\n            <h1 className=\"text-center mt-3\">Episode name : \r\n               <span className=\"text-warning\">\r\n                  { name === \"\" ? \"unknown\" : name}\r\n               </span>\r\n            </h1>\r\n            <h5 className=\"text-center mt-2\">Air Date : {air_date === \"\" ? \"unknown\" : air_date}</h5>\r\n         </div>\r\n         <div className=\"row mt-3\">\r\n            <div className=\"col-3\">\r\n               <h4 className=\"text-center mb-4\">Pick Episode</h4>\r\n               <Inputlist inputName=\"Episode\" total={51} setID={updateEpisode} />\r\n            </div>\r\n            <div className=\"col-8\">\r\n               <div className=\"row\">\r\n                  <Card page=\"/episodes/\" results={results}/>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Episodes\r\n","import React , { useState , useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nfunction Carddetail() {\r\n\r\n   let {id}=useParams();\r\n   let [fetchedData, updateFetchedData] = useState([]);\r\n   let api = `https://rickandmortyapi.com/api/character/${id}`;\r\n   //console.log(fetchedData);\r\n\r\n   useEffect(() => {\r\n      (async function () {\r\n        let data = await fetch(api).then((res) => res.json());\r\n        updateFetchedData(data);\r\n        console.log(data);\r\n      })();\r\n    }, [api]);\r\n    \r\n    let { name,status,image,gender,location,origin,species,type}=fetchedData;\r\n\r\n   return (\r\n      <div className=\"d-flex container justify-content-center\">\r\n         <div className=\"flex-column d-flex gap-2\">\r\n            <h1 className=\"text-center mt-4\">{name}</h1>\r\n            <img src={image} alt=\"\" className=\"img-fluid\" />\r\n            <div className=\"\">\r\n            {(()=>{\r\n                        if(status===\"Alive\"){\r\n                           return(\r\n                              <div className=\"badge bg-success fs-5\">\r\n                                 {status}\r\n                              </div>\r\n                           )\r\n                        }\r\n                        else if(status===\"Dead\"){\r\n                           return(\r\n                              <div className=\"badge bg-danger fs-5\">\r\n                                 {status}\r\n                              </div>\r\n                           )\r\n                        }\r\n                        else{\r\n                           return(\r\n                              <div className=\"badge bg-secondary fs-5\">\r\n                                 {status}\r\n                              </div>\r\n                           )\r\n                        }\r\n                     })()}\r\n            </div>\r\n            <div className=\"content\">\r\n               <div><span className=\"fw-bold\">Gender  :</span> {gender}</div>\r\n               <div><span className=\"fw-bold\">Location:</span> {location?.name}</div>\r\n               <div><span className=\"fw-bold\">Origin  :</span> {origin?.name}</div>\r\n               <div><span className=\"fw-bold\">Species :</span> {species}</div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Carddetail\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport './App.css';\nimport Search from \"./component/search\";\nimport Card from \"./component/card\";\nimport Pagination from \"./component/pagination\";\nimport Filter from \"./component/filter\";\nimport Navbar from \"./component/navbar\";\nimport { useEffect , useState } from 'react';\nimport  Location from \"./component/Location\";\nimport  Episodes from \"./component/Episodes\";\n\nimport { BrowserRouter , Route , Routes } from \"react-router-dom\";\nimport Carddetail from \"./component/category/carddetail\";\n\nfunction App(){\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n      </div>\n      <Routes>\n        <Route exact path=\"/\" element={<HomePage/>}/>\n        <Route path=\"/:id\" element={<Carddetail/>}/>\n\n        <Route path=\"/Episodes\" element={<Episodes/>}/>\n        <Route path=\"/episodes/:id\" element={<Carddetail/>}/>\n\n        <Route path=\"/Location\" element={<Location/>}/>\n        <Route path=\"/location/:id\" element={<Carddetail/>}/>\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nconst HomePage=() =>{\n  let [pageno, updatePageno] = useState(1);\n  let [search, updateSearch] = useState(\"\");\n  let [status, updateStatus] = useState(\"\");\n  let [gender, updateGender] = useState(\"\");\n  let [species, updateSpecies] = useState(\"\");\n  //let pagen=7\n  let api = `https://rickandmortyapi.com/api/character/?page=${pageno}&name=${search}&status=${status}&gender=${gender}&species=${species}`\n\n  let [fetchedData, updateFetchedData] = useState([]);\n  //destructure the content\n  let { info, results } = fetchedData;\n\n  //after the api change this useEffect used to fetch new data\n  //whenever the api changes i want to fetch new data \n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n      console.log(data);\n    })();\n  }, [api]);\n  \n  return (\n    <div className=\"App\">\n      <h1 className=\"text-center mt-3 mb-2\">Characters</h1>\n      <Search updateSearch={updateSearch} updatePageno={updatePageno}/>\n      <div className=\"container\">\n        <div className=\"row\">\n            <Filter updateStatus={updateStatus} updateSpecies={updateSpecies} updateGender={updateGender} updatePageno={updatePageno}/>\n          <div className=\"col-lg-8 col-8\">\n            <div className=\"row\">\n              <Card page=\"/\" results={results}/>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Pagination info={info} pageno={pageno} updatePageno={updatePageno}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}